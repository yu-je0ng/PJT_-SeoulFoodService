# Generated by Django 4.0.6 on 2022-08-16 03:37

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Mpro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessLoanInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.TextField(blank=True, null=True)),
                ('number_2017', models.FloatField(blank=True, db_column='2017', null=True)),
                ('number_2018', models.FloatField(blank=True, db_column='2018', null=True)),
                ('number_2019', models.FloatField(blank=True, db_column='2019', null=True)),
            ],
            options={
                'db_table': 'business_loan_interest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumerPriceIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years', models.IntegerField(blank=True, null=True)),
                ('cpi', models.FloatField(blank=True, db_column='CPI', null=True)),
                ('cpi_inflation', models.FloatField(blank=True, db_column='CPI_inflation', null=True)),
            ],
            options={
                'db_table': 'consumer_price_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Economics',
            fields=[
                ('index_year', models.IntegerField(db_column='INDEX_YEAR', primary_key=True, serialize=False)),
                ('cpi_change', models.FloatField(db_column='CPI_CHANGE')),
                ('interest_change', models.FloatField(db_column='INTEREST_CHANGE')),
                ('gni', models.FloatField(db_column='GNI')),
                ('gdp', models.FloatField(db_column='GDP')),
            ],
            options={
                'db_table': 'ECONOMICS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GdpEconomicGrowthRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.TextField(blank=True, null=True)),
                ('nominal_gdp', models.TextField(blank=True, db_column='nominal_GDP', null=True)),
                ('economic_growth_rate', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'GDP_economic_growth_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GniPerCapita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.TextField(blank=True, null=True)),
                ('real_gni_per_capita', models.TextField(blank=True, db_column='real_GNI_per_capita', null=True)),
                ('real_gni_growth_rate', models.TextField(blank=True, db_column='real_GNI_growth_rate', null=True)),
                ('nominal_gni_per_capita', models.TextField(blank=True, db_column='nominal_GNI_per_capita', null=True)),
                ('nominal_gni_growth_rate', models.TextField(blank=True, db_column='nominal_GNI_growth_rate', null=True)),
            ],
            options={
                'db_table': 'GNI_per_capita',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('gu_name', models.CharField(db_column='GU_NAME', max_length=10)),
                ('foot_traffic', models.IntegerField(db_column='FOOT_TRAFFIC')),
                ('population', models.IntegerField(db_column='POPULATION')),
                ('workers', models.IntegerField(db_column='WORKERS')),
                ('index_year', models.IntegerField(db_column='INDEX_YEAR', primary_key=True, serialize=False)),
                ('density', models.IntegerField(db_column='DENSITY')),
            ],
            options={
                'db_table': 'LOCATIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalPopulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('시점', models.TextField(blank=True, null=True)),
                ('서울특별시', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'regional_population',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurants',
            fields=[
                ('restaurant_id', models.CharField(db_column='RESTAURANT_ID', max_length=25, primary_key=True, serialize=False)),
                ('restaurant_name', models.CharField(db_column='RESTAURANT_NAME', max_length=50)),
                ('store_type', models.CharField(db_column='STORE_TYPE', max_length=20)),
                ('size', models.FloatField(db_column='SIZE')),
                ('close_year', models.IntegerField(db_column='CLOSE_YEAR')),
                ('lon', models.FloatField(db_column='LON')),
                ('lat', models.FloatField(db_column='LAT')),
                ('is_franchise', models.IntegerField(db_column='IS_FRANCHISE')),
                ('gu_name', models.CharField(db_column='GU_NAME', max_length=10)),
                ('nearby_station', models.IntegerField(blank=True, db_column='NEARBY_STATION', null=True)),
            ],
            options={
                'db_table': 'RESTAURANTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeoulCommercialArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gu_name', models.TextField(blank=True, db_column='GU_NAME', null=True)),
                ('foot_traffic', models.IntegerField(blank=True, db_column='FOOT_TRAFFIC', null=True)),
                ('population', models.IntegerField(blank=True, db_column='POPULATION', null=True)),
                ('workers', models.IntegerField(blank=True, db_column='WORKERS', null=True)),
                ('index_year', models.BigIntegerField(blank=True, db_column='INDEX_YEAR', null=True)),
                ('density', models.BigIntegerField(blank=True, db_column='DENSITY', null=True)),
            ],
            options={
                'db_table': 'seoul_commercial_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeoulMetroStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.TextField(blank=True, null=True)),
                ('longitude', models.TextField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'seoul_metro_station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeoulRestaurant',
            fields=[
                ('mgtno', models.CharField(db_column='MGTNO', max_length=30, primary_key=True, serialize=False)),
                ('bplcnm', models.TextField(blank=True, db_column='BPLCNM', null=True)),
                ('uptaenm', models.CharField(db_column='UPTAENM', max_length=15)),
                ('sitewhladdr', models.TextField(blank=True, db_column='SITEWHLADDR', null=True)),
                ('faciltotscp', models.FloatField(blank=True, db_column='FACILTOTSCP', null=True)),
                ('dtlstatenm', models.TextField(blank=True, db_column='DTLSTATENM', null=True)),
                ('year', models.CharField(db_column='YEAR', max_length=10)),
                ('month', models.CharField(db_column='MONTH', max_length=10)),
                ('day', models.CharField(db_column='DAY', max_length=10)),
                ('x', models.TextField(blank=True, db_column='X', null=True)),
                ('y', models.TextField(blank=True, db_column='Y', null=True)),
                ('franchise', models.IntegerField()),
                ('gu', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'seoul_restaurant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeoulStoreDataPreProc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_c0', models.TextField(blank=True, db_column='_c0', null=True)),
                ('bizesnm', models.TextField(blank=True, db_column='bizesNm', null=True)),
                ('indsmclscd', models.TextField(blank=True, db_column='indsMclsCd', null=True)),
                ('indsmclsnm', models.TextField(blank=True, db_column='indsMclsNm', null=True)),
                ('indssclscd', models.TextField(blank=True, db_column='indsSclsCd', null=True)),
                ('indssclsnm', models.TextField(blank=True, db_column='indsSclsNm', null=True)),
                ('ctprvncd', models.TextField(blank=True, db_column='ctprvnCd', null=True)),
                ('ctprvnnm', models.TextField(blank=True, db_column='ctprvnNm', null=True)),
                ('signgucd', models.TextField(blank=True, db_column='signguCd', null=True)),
                ('signgunm', models.TextField(blank=True, db_column='signguNm', null=True)),
                ('adongcd', models.TextField(blank=True, db_column='adongCd', null=True)),
                ('adongnm', models.TextField(blank=True, db_column='adongNm', null=True)),
                ('rdnmcd', models.TextField(blank=True, db_column='rdnmCd', null=True)),
                ('rdnm', models.TextField(blank=True, null=True)),
                ('lon', models.TextField(blank=True, null=True)),
                ('lat', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'seoul_store_data_pre_proc',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='SeoulCommercialAreaPopErd',
        ),
    ]
